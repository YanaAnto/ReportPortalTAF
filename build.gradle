buildscript {
    ext {
        rest_assured_version = "5.3.1"
        jackson_version = '2.15.1'
        cucumber_version = "7.11.1"
        json_path_version = "2.7.0"
        selenide_version = "6.17.2"
        lombok_version = "1.18.28"
        spring_version = "6.0.9"
        testng_version = "7.14.0"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'io.freefair.lombok' version '6.4.2'
    id 'com.avast.gradle.docker-compose' version '0.15.2'
}

group 'org.epam.report-portal'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    cucumberRuntime.extendsFrom testImplementation
}

dependencies {
    // JUnit
    testRuntimeOnly 'junit:junit:4.13.2'

    //TestNG
    implementation 'org.testng:testng:7.8.0'

    // Cucumber
    implementation "io.cucumber:cucumber-java:$cucumber_version"
    implementation "io.cucumber:cucumber-spring:$cucumber_version"
    implementation "io.cucumber:cucumber-junit:$cucumber_version"
    implementation "io.cucumber:cucumber-testng:$testng_version"


    // Reporting
    implementation 'me.jvt.cucumber:reporting-plugin:7.11.0'

    // REST
    implementation "io.rest-assured:rest-assured:$rest_assured_version"
    implementation "io.rest-assured:json-schema-validator:5.3.0"
    implementation 'io.rest-assured:json-path:5.3.0'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.2'
    implementation group: 'com.github.tomakehurst', name: 'wiremock', version: '3.0.0-beta-8'
    implementation "com.jayway.jsonpath:json-path:$json_path_version"

    // Spring & DI
    implementation "org.springframework:spring-context-support:$spring_version"
    implementation("org.springframework.boot:spring-boot-starter-test:3.1.2") {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }

    // java & lombok
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"

    // logging
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0"
    implementation "org.apache.logging.log4j:log4j-core:2.20.0"
    implementation "org.apache.logging.log4j:log4j-jul:2.20.0"

    // assertions
    implementation "org.assertj:assertj-core:3.24.2"
    implementation "org.awaitility:awaitility:4.2.0"
    implementation "org.unitils:unitils-core:3.4.6"
    implementation 'net.javacrumbs.json-unit:json-unit-assertj:2.36.1'

    // commons & utils
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation "org.apache.commons:commons-math3:3.6.1"
    implementation "org.apache.commons:commons-text:1.9"
    implementation "commons-beanutils:commons-beanutils:1.9.4"
    implementation("commons-io:commons-io") {
        version {
            strictly '2.8.0'
        }
    }

    // property management
    implementation "org.aeonbits.owner:owner-java8:1.0.12"

    //Selenium
    implementation "com.codeborne:selenide:$selenide_version"
}

def systemPropertySetup = {
    systemProperties System.getProperties()
    systemProperty 'log4j2.console.level', 'INFO'
}

def cucumberSetup = {
    shouldRunAfter compileTestJava
    group TASK_GROUP

    systemProperties.putIfAbsent("cucumber.execution.order", "lexical")
    systemProperties.putIfAbsent("cucumber.features", "classpath:features")
    systemProperties.putIfAbsent("cucumber.glue", "org.epam.definitions")
    systemProperties.putIfAbsent("cucumber.plugin", "pretty," +
            "junit:${buildDir}/reports/junit/TEST-cucumber.xml," +
            "json:${buildDir}/reports/cucumberReport.json")

    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
    jvmArgs += ['--add-opens', 'java.base/java.lang=ALL-UNNAMED']
    mainClass = "io.cucumber.core.cli.Main"
    // failed tests do not fail build
    if ("${System.env.LOCAL_RUN}" == "true") {
        ignoreExitValue = true
    }
}

task runCucumberTests(type: JavaExec) {
    description = 'Execute Cucumber tests as part of build pipeline'

    configure systemPropertySetup
    configure cucumberSetup

    systemProperties.putIfAbsent("cucumber.filter.tags", "not @ignore")
    args = ['--plugin', 'me.jvt.cucumber.report.PrettyReports:target/cucumber',
            '--threads', '2']
}